class Controller{constructor(){this.view=new View,this.map=new Map(1),this.player=new Player(1),this.computer=new Computer(1),this.finishTurn=document.querySelector(".finishRound"),this.events=[],this.takenSpots=[],this.startGame()}displayAll(){this.view.displayMapFeatures(this.map),this.view.displayUnits(this.player.units),this.view.displayBuildings(this.player.buildings),this.view.displayUnits(this.computer.units),this.view.displayBuildings(this.computer.buildings)}startGame(){this.displayAll(),this.assignClickEvents(),this.finishTurn.addEventListener("click",()=>{this.endPlayerTurn()})}endPlayerTurn(){this.player.units.forEach(e=>{e.resetMovement()}),removeActionOverlay(),this.computer.computerTurn()}assignClickEvents(){handleUnitsEvents(this,this.player.units,"click",this.displayMovementPossibilities),handleUnitsEvents(this,this.player.units,"mouseover",this.displayHoverInfo),handleUnitsEvents(this,this.computer.units,"mouseover",this.displayHoverInfo)}displayHoverInfo(e){let t=e.name;t[0].toUpperCase(),t[0].slice(1),updateElement(".imgHover",`<img src=${t}.png></img>`);let s=getProperties(e);for(let i in s.build="<br>N.A. in hover",s)updateElement(`.${i}Hover`,`<b>${i}: ${s[i]}</b>`)}displaySelectInfo(e){let t=e.name;t[0].toUpperCase(),t[0].slice(1),updateElement(".imgSelect",`<img src=${t}.png></img>`);let s=getProperties(e);for(let i in s.build="<br>N.A. in hover",s)updateElement(`.${i}Select`,`<b>${i}: ${s[i]}</b>`);"villager"===e.name?(updateElement(".buildSelect",'<b>build: <br> <button class ="yurtButton">Yurt</button> <button class="farmButton">Farm</button></b>'),document.querySelector(".yurtButton").addEventListener("click",()=>e.calculatePossibleBuilds("yurt")),document.querySelector(".farmButton").addEventListener("click",()=>e.calculatePossibleBuilds("farm"))):updateElement(".buildSelect","<b>build: <br>Can't Build</b>")}displayUnitMovement(e,t){removeAllOverlays(),this.view.eraseUnit(e,"player"),e.move(t),this.view.drawUnit(e,"player"),this.refreshEvents()}displayMovementPossibilities(e){if(this.displaySelectInfo(e),0!==document.querySelectorAll(".movable").length||0!==document.querySelectorAll(".attackable").length){removeAllOverlays();return}this.refreshEvents();let t=e.calculatePossibleMoves(),s=e.calculatePossibleAttacks();t&&(t.forEach(t=>{let s=convertToHtml(t),i=()=>this.displayUnitMovement(e,t);this.events.push([s,i]),s.addEventListener("click",i)}),this.view.displayMovableSquares(t)),s&&(s.forEach(t=>{let s=convertToHtml(t),i=()=>e.attack(t);this.events.push([s,i]),s.addEventListener("click",i)}),this.view.displayAttackableSquares(s))}refreshEvents(){this.events.forEach(e=>{e[0].removeEventListener("click",e[1]),e[0].removeEventListener("mouseover",e[1])}),this.assignClickEvents()}calculateBuildableSpots(){let e=[];return this.map.features.forEach(t=>{"dark_dirt"===t[2]&&e.push(t)}),e}checkMovable(e){this.updateTakenSpots();let t=this.map.checkPassableTerrain(e),s=!this.takenSpotIncludes(e);return!!t&&!!s}takenSpotIncludes(e){let t=!1;return this.takenSpots.forEach(s=>{s.toString()===e.toString()&&(t=!0)}),t}updateTakenSpots(){return this.takenSpots=[...this.player.units.map(e=>e.coord),...this.computer.units.map(e=>e.coord),...this.player.buildings.map(e=>e.coord),...this.computer.buildings.map(e=>e.coord)],this.map.impassableFeatures.forEach(e=>{let t=Math.abs(e[1][0]-e[0][0]),s=Math.abs(e[1][1]-e[0][1]);for(let i=e[0][0];i<=e[0][0]+t;i++)for(let l=e[0][1];l<=e[0][1]+s;l++)this.takenSpots.push([i,l])}),this.takenSpots}}let controller=new Controller;